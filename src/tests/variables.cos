* unit tests for variables
* fuzzie, 06/06/04

* test setv
SETV VA00 1
DBG: ASRT VA00 eq 1

* test subv
SETV VA00 4
SUBV VA00 2
DBG: ASRT VA00 eq 2

* test subv on an integer and float
setv va00 1
subv va00 0.25
dbg: asrt va00 = 0.75
setv va00 1.5
subv va00 1
dbg: asrt va00 = 0.5

* test addv
SETV VA00 4
ADDV VA00 2
DBG: ASRT VA00 eq 6

* test addv on an integer and float
setv va00 1
addv va00 0.25
dbg: asrt va00 = 1.25
setv va00 1.5
addv va00 1
dbg: asrt va00 = 2.5

* test mulv
SETV VA00 4
MULV VA00 2
DBG: ASRT VA00 eq 8

* test mulv on an integer and float
setv va00 1
mulv va00 0.25
dbg: asrt va00 = 0.25
setv va00 1.5
mulv va00 2
dbg: asrt va00 = 3.0

* test negv
SETV VA00 4
NEGV VA00
DBG: ASRT VA00 eq -4

* test modv
SETV VA00 7
MODV VA00 2
DBG: ASRT VA00 eq 1

* test that you can have independent va00/va01
SETV VA01 8
SETV VA00 7
DBG: ASRT VA01 eq 8 AND VA00 eq 7

* test setv with va00/va01, from nornagon
SETV VA00 1
SETV VA01 0
SETV VA00 VA01
DBG: ASRT VA00 eq VA01

* test if variables are zero by default
DBG: ASRT VA99 eq 0

