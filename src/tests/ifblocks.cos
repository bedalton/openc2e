* unit tests for DOIF/ELIF/ELSE/ENDI blocks and comparison operators
* fuzzie, 06/06/04

* test equality
DBG: ASRT 1 eq 1
DBG: ASRT 0.5 eq 0.5

* test non-equality
DBG: ASRT 1 ne 2
DBG: ASRT 0.5 ne 0.7

* test greater than
DBG: ASRF 1 > 2

* test less than
DBG: ASRT 1 < 2

* test le #1
DBG: ASRT 1 <= 1

* test le #2
DBG: ASRT 1 <= 2

* test le #3
DBG: ASRF 2 <= 1

* test ge #1
DBG: ASRT 1 >= 1

* test ge #2
DBG: ASRF 1 >= 2

* test ge #3
DBG: ASRT 2 >= 1

* test AND
DBG: ASRT 1 eq 1 AND 2 eq 2

* test OR #1
DBG: ASRT 1 eq 1 OR 1 eq 2

* test OR #2
DBG: ASRF 1 eq 2 OR 2 eq 3

* test embedded if blocks
DOIF 1 eq 2
 DOIF 1 eq 1
  DBG: FAIL
 ELSE
  DBG: FAIL
 ENDI
ELSE
 DOIF 1 eq 1
 ELSE
  DBG: FAIL
 ENDI
ENDI

* test ELIF
DOIF 1 eq 2
 DBG: FAIL
ELIF 1 eq 1
ELSE
 DBG: FAIL
ENDI

* test associativity
* (1 == 2 && 2 == 1) || 1 == 1
DBG: ASRT 1 gt 2 and 2 lt 1 or 1 eq 1

* test AND and OR, ie, ordering
DBG: ASRT 1 ne 1 and 2 eq 3 and 4 eq 5 or 1 eq 1

DBG: ASRT "a" lt "b"

SETV VA00 MOWS

* test AND #2
DBG: ASRF 1 eq 2 AND 2 eq 2

*test chained elifs
DOIF 1 eq 2
	DBG: FAIL
ELIF 1 eq 3
	DBG: FAIL
ELIF 2 eq 3
	DBG: FAIL
ELSE
ENDI

* test more chained elifs, with nesting
DOIF 1 eq 1
	SETV VA00 0
	DOIF 3 eq 1
		DBG: FAIL
	ELIF 4 eq 4
		SETV VA00 3
	ENDI
ELSE
	DBG: FAIL
ENDI
DBG: ASRT VA00 eq 3

* test that only one elif branch is evaluated
SETV VA00 0
DOIF 1 eq 2
	DBG: FAIL
ELIF 1 eq 1
	SETV VA00 1
ELIF 2 eq 2
	SETV VA00 2
ENDI
DBG: ASRF VA00 eq 2 or VA00 eq 0
